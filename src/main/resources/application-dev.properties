# ===============================
# = ENVIRONMENT
# ===============================
evident.env=

# ===============================
# = APP PORT
# ===============================
local.server.port=8888

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "evident"
c3p0.url = jdbc:mysql://nn.cmbv2uilxcrx.eu-west-1.rds.amazonaws.com:3306/nn

# Username and password
c3p0.username = root
c3p0.password = n34rn34r

# Keep the connection alive if idle for a long time (needed in production)
c3p0.preferredTestQuery = SELECT 1

c3p0.max_size=100
c3p0.min_size=3
c3p0.acquire_increment=1
c3p0.idle_test_period=100
c3p0.max_statements=30
c3p0.max_idle_time=180

c3p0.driverClassName=com.mysql.jdbc.Driver


# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true
spring.jpa.hibernate.format_sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = create-drop

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

